# Generated by Django 5.0.6 on 2025-10-13 09:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['country', 'name'],
                'unique_together': {('code', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.CharField(max_length=64, unique=True)),
                ('season', models.CharField(max_length=20)),
                ('date_utc', models.DateTimeField()),
                ('round', models.CharField(blank=True, max_length=50)),
                ('stadium', models.CharField(blank=True, max_length=200)),
                ('is_published', models.BooleanField(default=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='core.league')),
            ],
            options={
                'ordering': ['date_utc'],
            },
        ),
        migrations.CreateModel(
            name='Odds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.CharField(max_length=64)),
                ('ts', models.DateTimeField()),
                ('home_odds', models.FloatField()),
                ('draw_odds', models.FloatField()),
                ('away_odds', models.FloatField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odds', to='core.match')),
            ],
            options={
                'ordering': ['-ts'],
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_goals', models.IntegerField()),
                ('away_goals', models.IntegerField()),
                ('status', models.CharField(choices=[('finished', 'finished'), ('postponed', 'postponed')], max_length=20)),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='core.match')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='core.league')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'league')},
            },
        ),
        migrations.AddField(
            model_name='match',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='core.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='core.team'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat_name', models.CharField(max_length=64)),
                ('value', models.FloatField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='core.match')),
            ],
            options={
                'indexes': [models.Index(fields=['stat_name'], name='core_event_stat_na_af11ce_idx')],
            },
        ),
        migrations.CreateModel(
            name='Standing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played', models.IntegerField(default=0)),
                ('won', models.IntegerField(default=0)),
                ('draw', models.IntegerField(default=0)),
                ('lost', models.IntegerField(default=0)),
                ('gf', models.IntegerField(default=0)),
                ('ga', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=0)),
                ('home_played', models.IntegerField(default=0)),
                ('away_played', models.IntegerField(default=0)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standings', to='core.league')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.team')),
            ],
            options={
                'ordering': ['-points', '-gf'],
                'unique_together': {('league', 'team')},
            },
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['date_utc'], name='core_match_date_ut_08f6d0_idx'),
        ),
        migrations.AddIndex(
            model_name='match',
            index=models.Index(fields=['league', 'season'], name='core_match_league__db7e93_idx'),
        ),
    ]
